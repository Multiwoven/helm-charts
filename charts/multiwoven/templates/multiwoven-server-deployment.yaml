apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-server
  namespace: {{ .Values.kubernetesNamespace }}
  labels:
    app: {{ include "chart.fullname" . }}-server
    io.kompose.service: {{ include "chart.fullname" . }}-server
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.multiwovenServer.replicas }}
  selector:
    matchLabels:
      app: {{ include "chart.fullname" . }}-server
      io.kompose.service: {{ include "chart.fullname" . }}-server
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "chart.fullname" . }}-server
        io.kompose.service: {{ include "chart.fullname" . }}-server
      {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{ if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{ end }}
      containers:
      - env:
        {{ if .Values.secretsStore.enabled }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretsStore.secretAlias }}
              key: DB_PASSWORD
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretsStore.secretAlias }}
              key: DB_USERNAME
        {{ end }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: {{ include "chart.fullname" . }}-config
        image: {{ .Values.multiwovenServer.multiwovenServer.image.repository }}:{{ .Values.multiwovenServer.multiwovenServer.image.tag | default .Chart.AppVersion }}
        {{ if .Values.securityContext.enabled }}
        securityContext:
          {{ if .Values.securityContext.capabilities.enabled }}
          capabilities:
            {{ if .Values.securityContext.capabilities.drop.enabled }}
            drop:
            {{- if .Values.securityContext.capabilities.drop.permissions }}
            {{- range .Values.securityContext.capabilities.drop.permissions }}
              - {{ . }}
            {{- end }}
            {{- end }}
          {{ end }}
          {{ end }}
        {{ end }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ (index .Values.multiwovenServer.ports 0).port }}
          initialDelaySeconds: 15
          periodSeconds: 10
        name: {{ include "chart.fullname" . }}-server
        ports:
        - containerPort: {{ (index .Values.multiwovenServer.ports 0).port }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ (index .Values.multiwovenServer.ports 0).port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.multiwovenServer.multiwovenServer.resources | nindent 10 }}
        imagePullPolicy: Always
        volumeMounts:
        {{ if .Values.secretsStore.enabled }}
        - name: multiwoven-secrets-store
          mountPath: /run/secrets/store
          readOnly: true
        {{ end }}
        {{ if not .Values.temporal.enabled }}
        - name: ssl
          mountPath: /certs
          readOnly: false
        {{ end }}
      volumes:
      {{ if not .Values.temporal.enabled }}
      - name: ssl
        secret:
          secretName: temporal-cloud
          items:
          - key: temporal-client-key
            path: ./temporal.key
          - key: temporal-root-cert
            path: ./temporal.pem
      {{ end }}
      {{ if .Values.secretsStore.enabled }}
      - name: multiwoven-secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ include "chart.fullname" . }}-secret-provider-class
      {{ end }}
      restartPolicy: Always
      {{ if .Values.multiwovenConfig.privateRepo }}
      imagePullSecrets:
        - name: {{ .Values.multiwovenConfig.registrySecretName }}
      {{ end }}