{{ if .Values.multipleDbHosts.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "chart.fullname" . }}-temporal-config
  namespace: {{ .Values.kubernetesNamespace }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: info

    persistence:
      numHistoryShards: 4
      defaultStore: default
      visibilityStore: visibility
      datastores:
        default:
          sql:
            pluginName: {{ `{{ .Env.TEMPORAL_DB_PLUGIN }}` }}
            databaseName: {{ `{{ .Env.TEMPORAL_DEFAULT_DB_NAME }}` }}
            connectAddr: {{ `{{ .Env.TEMPORAL_DEFAULT_CONNECT_ADDR }}` }}
            connectProtocol: "tcp"
            user: {{ `{{ .Env.TEMPORAL_DEFAULT_USER }}` }}
            password: {{ `{{ .Env.TEMPORAL_DEFAULT_PASSWORD }}` }}
            maxConns: 20
            maxIdleConns: 20
            maxConnLifetime: 1h
            tls:
              enabled: true
              caFile: ""
              certFile: ""
              keyFile: ""
              enableHostVerification: false
              serverName: ""
        visibility:
          sql:
            pluginName: {{ `{{ .Env.TEMPORAL_DB_PLUGIN }}` }}
            databaseName: {{ `{{ .Env.TEMPORAL_VISIBILITY_DB_NAME }}` }}
            connectAddr: {{ `{{ .Env.TEMPORAL_VISIBILITY_CONNECT_ADDR }}` }}
            connectProtocol: "tcp"
            user: {{ `{{ .Env.TEMPORAL_VISIBILITY_USER }}` }}
            password: {{ `{{ .Env.TEMPORAL_VISIBILITY_PASSWORD }}` }}
            maxConns: 10
            maxIdleConns: 10
            maxConnLifetime: 1h
            tls:
              enabled: true
              caFile: ""
              certFile: ""
              keyFile: ""
              enableHostVerification: false
              serverName: ""

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ `{{ .Env.POD_IP | default "0.0.0.0" }}` }}
      pprof:
        port: 7936
      tls:
        refreshInterval: 0s
        expirationChecks:
          warningWindow: 0s
          errorWindow: 0s
          checkInterval: 0s
        internode:
          server:
            requireClientAuth: true
            certFile: ""
            keyFile: ""
          client:
            serverName: ""
            disableHostVerification: false
        frontend:
          server:
            requireClientAuth: true
            certFile: ""
            keyFile: ""
          client:
            serverName: ""
            disableHostVerification: false
        authorization:
          jwtKeyProvider:
            keySourceURIs:
            refreshInterval: 1m
          permissionsClaimName: permissions
          authorizer:
          claimMapper:

    services:
      frontend:
        rpc:
          grpcPort: 7233
          httpPort: 7243
          membershipPort: 6933
          bindOnIP: {{ `{{ .Env.FRONTEND_BIND_IP | default "0.0.0.0" }}` }}

      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnIP: {{ `{{ .Env.MATCHING_BIND_IP | default "0.0.0.0" }}` }}

      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnIP: {{ `{{ .Env.HISTORY_BIND_IP | default "0.0.0.0" }}` }}

      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnIP: {{ `{{ .Env.WORKER_BIND_IP | default "0.0.0.0" }}` }}

    clusterMetadata:
      enableGlobalNamespace: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "frontend"
          rpcAddress: {{ `{{ .Env.FRONTEND_RPC_ADDR | default "127.0.0.1:7233" }}` }}

    dcRedirectionPolicy:
      policy: "noop"

    archival:
      history:
        state: "enabled"
        enableRead: true
        provider:
          filestore:
            fileMode: "0666"
            dirMode: "0766"
      visibility:
        state: "enabled"
        enableRead: true
        provider:
          filestore:
            fileMode: "0666"
            dirMode: "0766"
    namespaceDefaults:
      archival:
        history:
          state: "disabled"
          URI: "file:///tmp/temporal_archival/development"
        visibility:
          state: "disabled"
          URI: "file:///tmp/temporal_vis_archival/development"

    dynamicConfigClient:
      filepath: "/etc/temporal/config/dynamicconfig/docker.yaml"
      pollInterval: "60s"
{{ end }}