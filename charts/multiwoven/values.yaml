kubernetesClusterDomain: cluster.local
kubernetesNamespace: multiwoven
multiwovenConfig:
  allowedHost: ""
  allowedSourceIP: "0.0.0.0/0"
  apiHost: api.multiwoven.com
  appRevision: unknown
  appEnv: community
  appsignalPushApiKey: yourkey
  awsAccessKeyId: ""
  awsSecretAccessKey: ""
  databricksDriverPath: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
  dbHost: multiwoven-postgresql
  dbPassword: password
  dbPort: "5432"
  dbUsername: multiwoven
  grpcEnableForkSupport: 1
  jwtSecret: ""
  newRelicKey: yourkey
  nginxProxyBodySize: 2m
  privateRepo: false
  railsEnv: development
  railsLogLevel: info
  registrySecretName: mwregistrysecret
  secretKeyBase: ""
  smtpAddress: smtp.yourdomain.com
  smtpBrandName: Multiwoven
  smtpHost: yourdomain.com
  smtpPassword: yourpassword
  smtpPort: "587"
  smtpUsername: yourusername
  smtpSenderEmail: admin@yourdomain.com
  snowflakeDriverPath: /usr/lib/snowflake/odbc/lib/libSnowflake.so
  syncExtractorBatchSize: "1000"
  syncExtractorThreadPoolSize: "10"
  syncLoaderBatchSize: "1000"
  syncLoaderThreadPoolSize: "10"
  temporalActivityThreadPoolSize: "20"
  temporalClientChain: /certs/temporal.chain.pem
  temporalClientKey: /certs/temporal.pem
  temporalHost: multiwoven-temporal
  temporalNamespace: multiwoven-dev
  temporalPort: "7233"
  temporalPostgresDefaultPort: "5432"
  temporalPostgresPassword: password
  temporalPostgresSsl: false
  temporalPostgresUser: multiwoven
  temporalPostgresqlVersion: "13"
  temporalRootCert: /certs/temporal.key
  temporalTaskQueue: sync-dev
  temporalUiHost: temporal.multiwoven.com
  temporalUiVersion: 2.23.2
  temporalVersion: 1.22.4
  temporalWorkflowThreadPoolSize: "10"
  tlsAdminEmail: admin@multiwoven.com
  tlsCertIssuer: letsencrypt-staging
  uiHost: app.multiwoven.com
  userEmailVerification: "false"
  viteApiHost: api.multiwoven.com
  viteAppsignalPushApiKey: yourkey
  viteBrandName: "Multiwoven"
  viteLogoUrl: ""
  viteBrandColor: ""
  viteBrandHoverColor: ""
  viteFavIconUrl: ""
  workerHost: worker.multiwoven.com

automountServiceAccountToken:
  enabled: true

externalDNS:
  enabled: false

nginxIngress:
  enabled: true

kongIngress:
  enabled: false
  plugins:
    prometheus:
      enabled: false

serviceAccount:
  create: false
  name: multiwoven-service-account
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/example-role

secretsStore:
  enabled: false
  secretAlias: dbsecret-f01dd256e712
  aws:
    dbCredsSecretName: ""

securityContext:
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: true
  capabilities:
    drop:
      permissions:
        - "ALL"

globalImagePullPolicy: IfNotPresent

hpa:
  enabled: true
  multiwovenUI:
    minReplicas: 1
    maxReplicas: 10
    cpuAverageUtilizationPercentageThreshold: 80
    memoryAverageUtilizationPercentageThreshold: 75
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          selectPolicy: Max
      scaleUp:
        stabilizationWindowSeconds: 45
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Pods
            value: 4
            periodSeconds: 15
          selectPolicy: Max
  multiwovenServer:
    minReplicas: 1
    maxReplicas: 10
    cpuAverageUtilizationPercentageThreshold: 80
    memoryAverageUtilizationPercentageThreshold: 60
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          selectPolicy: Max
      scaleUp:
        stabilizationWindowSeconds: 45
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Pods
            value: 4
            periodSeconds: 15
          selectPolicy: Max
  multiwovenWorker:
    minReplicas: 1
    maxReplicas: 10
    cpuAverageUtilizationPercentageThreshold: 80
    memoryAverageUtilizationPercentageThreshold: 50
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          selectPolicy: Max
      scaleUp:
        stabilizationWindowSeconds: 45
        policies:
          percentPolicy:
            type: Percent
            value: 100
            periodSeconds: 15
          podPolicy:
            type: Pods
            value: 4
            periodSeconds: 15
          selectPolicy: Max

multiwovenPostgresql:
  enabled: true
  multiwovenPostgresql:
    image:
      repository: postgres
      tag: "13"
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  replicas: 1
  type: ClusterIP
multiwovenServer:
  podSecurityContext:
    fsGroup: 1000
  multiwovenServer:
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
    image:
      repository: multiwoven/multiwoven-server
      tag: latest
    resources:
      limits:
        cpu: "2"
        memory: "3Gi"
      requests:
        cpu: "1"
        memory: "1Gi"
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  replicas: 1
  type: ClusterIP
multiwovenUI:
  podSecurityContext:
    fsGroup: 1000
  multiwovenUI:
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
    image:
      repository: multiwoven/multiwoven-ui
      tag: latest
    resources:
      limits:
        cpu: "200m"
        memory: "512Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  replicas: 1
  type: ClusterIP
multiwovenWorker:
  healthPort: 4567
  podSecurityContext:
    fsGroup: 1000
  multiwovenWorker:
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
    args:
      - sh
      - -c
      - |
        ./app/temporal/cli/register_namespace && ./app/temporal/cli/worker
    image:
      repository: multiwoven/multiwoven-server
      tag: latest
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: "500m"
        memory: 1Gi
  ports:
    - name: "4567"
      port: 4567
      targetPort: 4567
  replicas: 1
  type: ClusterIP
pvc:
  pvc:
    storageRequest: 100Mi
temporal:
  podSecurityContext:
    fsGroup: 1000
  enabled: true
  ports:
    - name: "7233"
      port: 7233
      targetPort: 7233
  replicas: 1
  temporal:
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
    env:
      db: postgresql
    image:
      repository: temporalio/auto-setup
      tag: 1.22.4
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  type: ClusterIP
temporalUi:
  podSecurityContext:
    fsGroup: 5000
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  replicas: 1
  temporalUi:
    containerSecurityContext:
      runAsUser: 5000
      runAsGroup: 5000
    env:
      temporalAddress: multiwoven-temporal:7233
      temporalCorsOrigins: http://localhost:3000
      temporalUiPort: "8080"
    image:
      repository: temporalio/ui
      tag: 2.22.3
    resources:
      requests:
        cpu: "250m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  type: ClusterIP
